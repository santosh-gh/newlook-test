name: 'Terraform'
 
on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - terraform
 
env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  terraform:
    name: 'Provision AKS'    
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v2 

  Init:
    needs: terraform
    runs-on: ubuntu-latest
    name: 'Init'
    steps:
    - name: Checkout
      uses: actions/checkout@v2 

    - name: 'Terraform Init'    
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ vars.TF_VERSION }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform"

 
    - name: Checkout
      uses: actions/checkout@v2 

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ vars.TF_VERSION }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform"
   
  Plan:
    needs: Init
    runs-on: ubuntu-latest
    name: 'Plan'
    steps:   
    - name: Checkout
      uses: actions/checkout@v2 
   
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ vars.TF_VERSION }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform"

  Apply:
    needs: Plan
    runs-on: ubuntu-latest
    name: 'Apply'
    steps: 
    - name: Checkout
      uses: actions/checkout@v2 

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ vars.TF_VERSION }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform"